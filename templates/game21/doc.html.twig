{% extends "base.html.twig" %}

{% block title %}Game 21 docs{% endblock %}

{% block body %}

<h1>Game 21 dokumentation</h1>
<p>Beskrivning kommer inom kort</p>
{# {{ about | raw }} #}

<h2>Klasser</h2>
<table>
<tr><th>Klass</th><th>Beskrivning</th></tr>
<tr><td>Card</td><td>Basklassen för ett spelkort. Innehåller bla information om kortets rank, suit, color (röd/svart) och värde i integer.</td></tr>
<tr><td>CardGraphic</td><td>Ärver från basklassen Card. Har en metod för att hämta bildlänk till svg representation av kortet. SVG bilderna för korten är skapade av Adrian Kennard och kan laddas ner härifrån <a href="https://www.me.uk/cards/" target="_blank">https://www.me.uk/cards/</a></td></tr>
<tr><td>DeckOfCards</td><td>Innehåller 52 kort (instanser av CardGraphic). Det är denna kortleken som för närvarande används på webbplatsen. DeckOfCards skapar instanser av CardGraphic. Det finns en metod i DeckOfCards för att plocka ut ett kort varefter CardGraphic kan fortsätta existera utanför DeckOfCards. Fram till att ett kort plockas ut från en DeckOfCards är relationen melan CardGraphic och DeckOfCards en komposition, efteråt skulle jag vilja säga att relationen blir dependency (DeckOfCards instantiates CardGraphic)</td></tr>
<tr><td>CardHand</td><td>Representerar en spelares hand. Relationen mellan CardHand och DeckOfCards är dependency eftersom en instans av DeckOfCards måste skickas in som argument till konstruktorn for CardHand. Inuti konstruktorn hämtas instanser av CardGraphic från kortleken och läggs till i handen - relationen mellan CardHand och CardGraphic blir då en komposition eftersom korten som ligger inuti CardHans försvinner om CardHand skulle tas bort.</td></tr>
<tr><td>Game</td><td>Base class for a card-game</td></tr>
<tr><td>GameSinglePlayer</td><td>Inherits from class Game and is base-class for single-player type games. Has attribute for player which contains a player of any class that implements PayerInterface.</td></tr>
<tr><td>Game21Easy</td><td>Inherits from GameSinglePlayer and has additional attribute representing bank of class Player21 and additional methods related to 21 game. Bank picks cards as long as points amount to at or below a certain amount. Method for statistics calculate statistics based on remaining cards in deck.</td></tr>
<tr><td>Game21Med</td><td>Inherits from Game21Easy. Overrides method for statistics to calculate statistics differently for bank (as the bank now also uses statistics) and thus the statistics needs to take into account the cards that already ahve been drawn from deck by the player.</td></tr>
<tr><td>Game21Hard</td><td>Inherits from Game21Easy. Overrides method for dealBank that continues pick card based on statistics, but does not change method for statistics.</td></tr>
<tr><td>Player</td><td>Base class, represents a player in card-game.</td></tr>
<tr><td>Player 21</td><td>Inherits from base class Player. Has two additional methods for calculating actual points and for calculating min points (Ace = 1) which is used in the game classes method for estimating risk.</td></tr>
</table>

{% endblock %}