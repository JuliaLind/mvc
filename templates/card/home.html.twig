{% extends "base.html.twig" %}

{% block title %}Home{% endblock %}

{% block body %}
<h1>Kortspel</h1>

<h2>Routes</h2>
<table>
    <tr><th>Route</th><th>Method</th></tr>
{% for route in cardRoutes %}
    <tr><td>
        {% if route.method != "GET" %}
            {% if route.link == "drawMany" %}
                <form action="{{ path(route.link, {number: 5}) }}" method={{ route.method }}>
                <input type="submit" value={{ path(route.link, {number: 5}) }}>
            {% elseif route.link == "deal" %}
                <form action="{{ path(route.link, {players: 3, cards: 5}) }}" method={{ route.method }}>
                <input type="submit" value={{ path(route.link, {players: 3, cards: 5}) }}>
            {% else %}
                <form action="{{ path(route.link) }}" method={{ route.method }}>
                <input type="submit" value={{ path(route.link) }}>
            {% endif %}
        </form>
        {% else %}
            <a href="{{ path(route.link) }}">{{ path(route.link) }}</a>
        {% endif %}
        </td>
        <td>
            {{ route.method }}
        </td>        
    </tr>
{% endfor %}
</table>

<h2>Klasser</h2>
<table>
<tr><th>Klass</th><th>Beskrivning</th></tr>
<tr><td>Card</td><td>Basklassen för ett spelkort. Innehåller bla information om kortets rank, suit, color (röd/svart) och värde i integer.</td></tr>
<tr><td>CardGraphic</td><td>Ärver från basklassen Card. Har en metod för att hämta bildlänk till svg representation av kortet. SVG bilderna för korten är skapade av Adrian Kennard och kan laddas ner härifrån <a href="https://www.me.uk/cards/" target="_blank">https://www.me.uk/cards/</a></td></tr>
<tr><td>DeckOfCards</td><td>Innehåller 52 kort (instanser av CardGraphic). Det är denna kortleken som för närvarande används på webbplatsen. DeckOfCards skapar instanser av CardGraphic. Det finns en metod i DeckOfCards för att plocka ut ett kort varefter CardGraphic kan fortsätta existera utanför DeckOfCards. Fram till att ett kort plockas ut från en DeckOfCards är relationen melan CardGraphic och DeckOfCards en komposition, efteråt skulle jag vilja säga att relationen blir dependency (DeckOfCards instantiates CardGraphic)</td></tr>
<tr><td>DeckOfCardsExt</td><td>Ärver från basklassen DeckOfCards. Innehåller 54 kort. Överlagrar Construct metoden från basklassen för att lägga till två kort - en röd respektive en svart joker. Används för närvarande inte på webbplatsen.</td></tr>
<tr><td>CardHand</td><td>Representerar en spelares hand. Relationen mellan CardHand och DeckOfCards är dependency eftersom en instans av DeckOfCards måste skickas in som argument till konstruktorn for CardHand. Inuti konstruktorn hämtas instanser av CardGraphic från kortleken och läggs till i handen - relationen mellan CardHand och CardGraphic blir då en komposition eftersom korten som ligger inuti CardHans försvinner om CardHand skulle tas bort.
 </td></tr>
</table>

<h2>UML klassdiagram</h2>
<img class="diagram" src="{{ asset('img/uml_kmom02.png') }}" alt="uml class diagram">
{% endblock %}